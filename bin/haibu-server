#!/usr/bin/env node

require.paths.unshift(require('path').join(__dirname, '..', 'lib'));

var util = require('util'),
    colors = require('colors'),
    argv = require('optimist').argv,
    haibu = require('haibu');

var help = [
    'usage: haibu-server [options]',
    '',
    'Starts the haibu API server responsible for spawning node.js applications.',
    '',
    'options:',
    '  -a             IP Address that you want the server to bind to  [dynamic]',
    '  -p             Port that you want the server to run on         [9002]',
    '  -e [env]       The environment to the specified command in     [development]',
    '  --logger       Use the haibu logger plugin                     [true]',
    '  --chroot       Deploy drones using chroot',
    '  -s --silent    Suppress the log messages from the output',
    '  -h, --help     You\'re staring at it',
].join('\n');

if (argv.h || argv.help) {
  return util.puts(help);
}

if (argv.chroot) {
  haibu.use(haibu.plugins.chroot);
}

var env    = argv.env || 'development',
    logger = typeof argv.logger !== 'undefined' ? argv.logger : true,
    port   = argv.p   || 9002;

haibu.utils.bin.getAddress(argv.a, function (err, address) {
  if (err) {
    log('Error getting IP Address: ' + err.message);
  }
  
  haibu.utils.bin.tryLoadCache(function (err, config) {
    var options = {
      env: env,
      port: port,
      host: address,
      config: config
    };
  
    haibu.drone.start(options, function () {
      if (logger) {
        haibu.use(haibu.plugins.logger);
      }
      
      haibu.utils.showWelcome('api-server', address, port);
    });
  });
});
